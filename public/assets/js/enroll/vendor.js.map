{"version":3,"sources":["datatable.js","enroll.js"],"names":[],"mappingshfile":"vendor.js","sourcesContent":["/***\r\nWrapper/Helper Class for datagrid based on jQuery Datatable Plugin\r\n***/\r\nvar AjaxTable = function() {\r\n\r\n    var tableOptions; // main options\r\n    var dataTable; // datatable object\r\n    var table; // actual table jquery object\r\n    var tableContainer; // actual table container object\r\n    var tableWrapper; // actual table wrapper jquery object\r\n    var tableInitialized = false;\r\n    var ajaxParams = {}; // set filter mode\r\n    var the;\r\n    var overlay = $('.waiting');\r\n\r\n    return {\r\n\r\n        //main function to initiate the module\r\n        init: function(options) {\r\n            if (!$().dataTable) return;\r\n\r\n            the = this;\r\n\r\n            // default settings\r\n            options = $.extend(true, {\r\n                src: \"\", // actual table  \r\n                loadingMessage: '载入中...',\r\n                dataTable: {\r\n                    \"language\": {\r\n                        \"oAria\": {\r\n                            \"sSortAscending\":  \": 以升序排列此列\",\r\n                            \"sSortDescending\": \": 以降序排列此列\"\r\n                        },\r\n                        \"sEmptyTable\":     \"表中数据为空\",\r\n                        \"sInfo\":         \"<span class='seperator'>|</span>显示第 _START_ 至 _END_ 项结果，共 _TOTAL_ 项\",\r\n                        \"sInfoEmpty\":    \"显示第 0 至 0 项结果，共 0 项\",\r\n                        \"sInfoFiltered\": \"(由 _MAX_ 项结果过滤)\",\r\n                        \"sLengthMenu\":   \"<span class='seperator'>|</span>显示 _MENU_ 项结果\",\r\n                        \"sSearch\":       \"搜索:\",\r\n                        \"sProcessing\":   \"处理中...\",\r\n                        \"sZeroRecords\":  \"没有匹配结果\",\r\n                        \"sInfoPostFix\":  \"\",\r\n                        \"sUrl\":          \"\",\r\n                        \"sLoadingRecords\": \"载入中...\",\r\n                        \"sInfoThousands\":  \",\",\r\n                        \"oPaginate\": {\r\n                            \"sFirst\":    \"<i class=\\\"icon-control-start\\\"></i>\",\r\n                            \"sPrevious\": \"<i class=\\\"icon-arrow-left\\\"></i>\",\r\n                            \"sNext\":     \"<i class=\\\"icon-arrow-right\\\"></i>\",\r\n                            \"sLast\":     \"<i class=\\\"icon-control-end\\\"></i>\"\r\n                        }\r\n                    },\r\n\r\n                    \"orderCellsTop\": true,\r\n                    \"autoWidth\": true, \r\n\r\n                    \"processing\": false, \r\n                    \"serverSide\": true,\r\n                    \"deferRender\": true,\r\n\r\n                    \"ajax\": { \r\n                        \"url\": \"\", \r\n                        \"contentType\": \"application/json\",\r\n                        \"data\": function(data) {\r\n                            // padding the empty table\r\n                            var extraHeight = $('html').height() - 40 - $('.page-content').height() - 36;\r\n\r\n                            overlay.css({\r\n                                display: 'block',\r\n                                width: '100%',\r\n                                backgroundColor: 'rgba(0, 0, 0, .02)',\r\n                                marginTop: '-40px',\r\n                                border: '1px solid #e7ecf1',\r\n                                borderTop: 0,\r\n                                height: extraHeight + 'px'\r\n                            });\r\n\r\n                            App.blockUI({\r\n                                message: tableOptions.loadingMessage,\r\n                                overlayColor: 'none',\r\n                                target: overlay,\r\n                                cenrerY: true,\r\n                                boxed: true,\r\n                            });\r\n\r\n                            if (tableOptions.beforeAjax) \r\n                                tableOptions.beforeAjax.bind(the).call(the, data);\r\n\r\n                            return the.data;\r\n                        },\r\n                        \"dataSrc\": function(res) { // Manipulate the data returned from the server\r\n                            if ($('.group-checkable', table).size() === 1) \r\n                                $('.group-checkable', table).attr(\"checked\", false);\r\n\r\n                            if (tableOptions.onSuccess) \r\n                                tableOptions.onSuccess.call(undefined, the, res);\r\n\r\n                            App.unblockUI(overlay);\r\n\r\n                            overlay.remove();\r\n\r\n                            return res.data;\r\n                        },\r\n                        \"error\": function() { // handle general connection errors\r\n                            if (tableOptions.onError) \r\n                                tableOptions.onError.call(undefined, the);\r\n\r\n                            App.alert({\r\n                                type: 'danger',\r\n                                icon: 'warning',\r\n                                message: \"请求无法完成， 请检查网络连接是否正常\",\r\n                                container: tableWrapper,\r\n                                place: 'prepend'\r\n                            });\r\n\r\n                            $('#enroll_length select').attr('disabled', true);\r\n                            $('#enroll_filter input[type=\"search\"').attr('disabled', true);\r\n                        }\r\n                    },\r\n\r\n                    \"drawCallback\": function(oSettings) { // run some code on table redraw\r\n                        if (tableInitialized === false) { // check if table has been initialized\r\n                            tableInitialized = true; // set table initialized\r\n                            table.show(); // display table\r\n                        }\r\n                        //countSelectedRecords(); // reset selected records indicator\r\n\r\n                        // callback for ajax data load\r\n                        if (tableOptions.onDataLoad) \r\n                            tableOptions.onDataLoad.call(undefined, the);\r\n                    }\r\n                }\r\n            }, options);\r\n\r\n            tableOptions = options;\r\n\r\n            // create table's jquery object\r\n            table = $(options.src);\r\n            tableContainer = table.parents(\".table-container\");\r\n\r\n            // apply the special class that used to restyle the default datatable\r\n            var tmp = $.fn.dataTableExt.oStdClasses;\r\n\r\n            $.fn.dataTableExt.oStdClasses.sWrapper = $.fn.dataTableExt.oStdClasses.sWrapper + \" dataTables_extended_wrapper\";\r\n            $.fn.dataTableExt.oStdClasses.sFilterInput = \"form-control input-xs input-sm input-inline\";\r\n            $.fn.dataTableExt.oStdClasses.sLengthSelect = \"form-control input-xs input-sm input-inline\";\r\n\r\n            // initialize a datatable\r\n            dataTable = table.DataTable(options.dataTable);\r\n\r\n            // revert back to default\r\n            $.fn.dataTableExt.oStdClasses.sWrapper = tmp.sWrapper;\r\n            $.fn.dataTableExt.oStdClasses.sFilterInput = tmp.sFilterInput;\r\n            $.fn.dataTableExt.oStdClasses.sLengthSelect = tmp.sLengthSelect;\r\n\r\n            // get table wrapper\r\n            tableWrapper = table.parents('.dataTables_wrapper');\r\n\r\n            // build table group actions panel\r\n            if ($('.table-actions-wrapper', tableContainer).size() === 1) {\r\n                $('.table-group-actions', tableWrapper).html($('.table-actions-wrapper', tableContainer).html()); // place the panel inside the wrapper\r\n                $('.table-actions-wrapper', tableContainer).remove(); // remove the template container\r\n            }\r\n        },\r\n\r\n        getSelectedRows: function() {\r\n            var rows = [];\r\n            $('tbody > tr > td:nth-child(1) input[type=\"checkbox\"]:checked', table).each(function() {\r\n                rows.push($(this).val());\r\n            });\r\n\r\n            return rows;\r\n        },\r\n\r\n        getDataTable: function() {\r\n            return dataTable;\r\n        },\r\n\r\n        getTableWrapper: function() {\r\n            return tableWrapper;\r\n        },\r\n\r\n        gettableContainer: function() {\r\n            return tableContainer;\r\n        },\r\n\r\n        getTable: function() {\r\n            return table;\r\n        }\r\n\r\n    };\r\n\r\n};","var Enroll = function () {\n\n\tvar initTable = function () {\n\t\tvar ajaxtable = new AjaxTable();\n\t\tvar enroll = $('#enroll');\n\t\tvar controls = {};\n\n\t\t// counter\n\t\tvar rows;\n\t\tvar checkcount = 0;\n\n\t\t// 简单的表格设置\n\t\tajaxtable.init({\n\t\t\tsrc: enroll,\n\t\t\tdataTable: {\n\t\t\t\t\"ajax\": {\n                    \"url\": \"/enroll/api/test\", // 测试表单数据\n                    \"type\": \"POST\", \n                    \"timeout\": 2000\n                },\n                \"dom\": \"<'row'<'col-md-4 col-sm-12'l><'col-md-8 col-sm-12'<'row'<'col-md-10'f><'col-md-2'<'table-group-actions pull-right'>>r>>><'table-responsive't><'row'<'col-md-5'i><'col-md-7'p>>\",\n\t\t\t\t\"stateSave\": true, // 保存表格状态到cookie\n\t            \"lengthMenu\": [\n\t                [14, 20, 30, 50, 100, -1],\n\t                [14, 20, 30, 50, 100, \"All\"] // change per page values here\n\t            ],\n\t            \"pageLength\": 14, // 表格显示页项的初始大小        \n\t            \"pagingType\": \"simple_numbers\",\n\t            \"columnDefs\": [\n\t            \t{  'orderable': false, 'targets': '_all' }, \n\t            \t{ \"searchable\": false, 'targets': [0, 6, 7] },\n\t            \t{ \"type\": \"chinese-string\", \"targets\": [1, 2, 4] }\n\t            ],\n\t            \"order\": [ [1, \"asc\"] ],\n                \"rowCallback\": function (row, data, index) {\n                \t$(row).on('change', 'input[type=\"checkbox\"]', function () {\n                \t\tvar checked = $(this).prop('checked');\n\n\t\t\t\t\t\tcheckcount += checked ? 1 : -1;\n\n\t                \tif (checkcount == 0)\n\t                \t\tcontrols.info.html('<i class=\"fa fa-exclamation\"></i> 暂无人员选中');\n\t                \telse\n\t                \t\tcontrols.info.html('<i class=\"fa fa-user\"></i> 选择 ' + checkcount + ' 人');\n                \t});\n                }\n\t        },\n\t        'beforeAjax': function (data) {\n\t        \t// json file\n\t        \tthis.data = JSON.stringify(data);\n\t        },\n\t        'onSuccess': function (grid, res) {\n\t        \t// 初始化控制工具\n\t        \tcontrols.info = $('.table-group-actions .table-selected-info');\n\t        },\n\t        'onDataLoad': function (grid) {\n\t        \trows = grid.getDataTable().settings()[0]._iDisplayLength;\n\t        \tcheckcount = 0;\n\n\t        \tvar table = grid.getTable();\n\t        \t// handle group checkboxes check/uncheck\n\t            $('.group-checkable', table).change(function() {\n\t                var set = table.find('tbody > tr > td:nth-child(1) input[type=\"checkbox\"]');\n\n\t                $(set).each(function() { $(this).trigger('change'); });\n\t            });\n\t        }\n\t\t});\n\n\t\t$('#enroll_wrapper').find('#enroll_filter').addClass('pull-right');\n\n\t\tenroll.find('.group-checkable').change(function () {\n\t        var set = jQuery(this).attr(\"data-set\");\n\t        var checked = jQuery(this).is(\":checked\");\n\t        jQuery(set).each(function () {\n\t            if (checked) {\n\t                $(this).prop(\"checked\", true);\n\t                $(this).parents('tr').addClass(\"active\");\n\t            } else {\n\t                $(this).prop(\"checked\", false);\n\t                $(this).parents('tr').removeClass(\"active\");\n\t            }\n\t        });\n\t    });\n\n\t    enroll.on('change', 'tbody tr .checkboxes', function () {\n\t        $(this).parents('tr').toggleClass(\"active\");\n\t    });\n\t};\n\n\tvar initExtendModal = function () {\n\t\t// general settings\n        $.fn.modal.defaults.spinner = $.fn.modalmanager.defaults.spinner = \n          '<div class=\"loading-spinner\" style=\"width: 200px; margin-left: -100px;\">' +\n            '<div class=\"progress progress-striped active\">' +\n              '<div class=\"progress-bar\" style=\"width: 100%;\"></div>' +\n            '</div>' +\n          '</div>';\n\n        $.fn.modalmanager.defaults.resize = true;\n\t};\n\n\treturn {\n        init: function () {\n\n            if (!jQuery().dataTable) \n            \treturn;\n\n            initTable();\n            initExtendModal();\n        }\n    };\n}();\n\nif (App.isAngularJsApp() === false) { \n    jQuery(document).ready(function() {\n    \t$.ajaxSetup({\n    \t\theaders: {\n    \t\t\t'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n    \t\t}\n    \t});\n\n        Enroll.init();\n    });\n}"],"sourceRoot":"/source/"}